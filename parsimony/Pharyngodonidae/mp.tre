#NEXUS 

Begin trees;  [Treefile saved Mon Dec 04 11:54:47 2017]
[!
>Data file = C:\Users\HP\Desktop\实验-2017-12-04\陆龟科寄生种\gshw.nex
>Heuristic search settings:
>   Optimality criterion = maximum parsimony
>      Character-status summary:
>        Of 37 total characters:
>          All characters are of type 'unord'
>          All characters have equal weight
>          6 characters are constant
>          5 variable characters are parsimony-uninformative
>          Number of parsimony-informative characters = 26
>      Gaps are treated as "missing"
>   Starting tree(s) obtained via stepwise addition
>   Addition sequence: random
>      Number of replicates = 10
>      Starting seed = 423117436
>   Number of trees held at each step during stepwise addition = 1
>   Branch-swapping algorithm: tree-bisection-reconnection (TBR)
>   Steepest descent option not in effect
>   Initial 'MaxTrees' setting = 100
>   Branches collapsed (creating polytomies) if maximum branch length is zero
>   'MulTrees' option in effect
>   Topological constraints not enforced
>   Trees are unrooted
>
>Search terminated prematurely (no room to store new trees)
>   100 trees retained
>   Time used = 2.59 sec
]
	Translate
		1 Alaeuris_numidica,
		2 Tachygonetria_combesi,
		3 T.conica,
		4 T.dentata,
		5 T.khallaayounei,
		6 T.longicollis,
		7 T.marocana,
		8 T.numidica,
		9 T.palearcticus,
		10 T.poulini,
		11 T.Pusilla,
		12 T.Settatensis,
		13 T.Setosa,
		14 T.Vivipara,
		15 Angusticaecum_holopterum,
		16 Raillietnema_bainae
		;
tree PAUP_1 = [&U] (15,16,(1,((2,4),((((((3,9),6,13),11),12),(7,5)),14)),10,8));
tree PAUP_2 = [&U] (1,((((((2,4),(8,10),14),((5,7),12)),((6,13),11)),(3,9)),(15,16)));
tree PAUP_3 = [&U] (1,((((((2,4),(8,10),14),((5,7),12)),(3,9)),((6,13),11)),(15,16)));
tree PAUP_4 = [&U] (1,(((((2,4),(8,10),14),(((5,7),12),((6,13),11))),(3,9)),(15,16)));
tree PAUP_5 = [&U] (1,(((((2,4),(8,10),14),((5,7),12),((6,13),11)),(3,9)),(15,16)));
tree PAUP_6 = [&U] (1,(((((2,4),(8,10),14),((5,7),(((6,13),11),12))),(3,9)),(15,16)));
tree PAUP_7 = [&U] (1,(((((2,4),(8,10),14),((5,7),12)),(((3,9),6,13),11)),(15,16)));
tree PAUP_8 = [&U] (1,((((2,4),(8,10),14),((((3,9),6,13),11),((5,7),12))),(15,16)));
tree PAUP_9 = [&U] (1,((((2,4),(8,10),14),(((3,9),6,13),11),((5,7),12)),(15,16)));
tree PAUP_10 = [&U] (1,((((2,4),(8,10),14),(((((3,9),6,13),11),12),(5,7))),(15,16)));
tree PAUP_11 = [&U] (1,((((2,4),(((3,9),(6,11,13)),((5,7),12)),14),(8,10)),(15,16)));
tree PAUP_12 = [&U] (1,((((2,4),(((3,9),(6,11,13)),((5,7),12)),14),8,10),(15,16)));
tree PAUP_13 = [&U] (1,(((((2,4),(8,10),14),((5,7),12)),(((3,9),(6,13)),11)),(15,16)));
tree PAUP_14 = [&U] (1,(((((2,4),(8,10),14),((5,7),12)),((3,9),(6,13)),11),(15,16)));
tree PAUP_15 = [&U] (1,((((((2,4),(8,10),14),((5,7),12)),((3,9),(6,13))),11),(15,16)));
tree PAUP_16 = [&U] (1,(((((2,4),(8,10),14),((5,7),12)),((3,9),((6,13),11))),(15,16)));
tree PAUP_17 = [&U] (1,((((2,4),(8,10),14),((3,9),(6,11,13)),((5,7),12)),(15,16)));
tree PAUP_18 = [&U] (1,(((((2,4),14),(8,10)),(((3,9),(6,11,13)),((5,7),12))),(15,16)));
tree PAUP_19 = [&U] (1,((((((2,4),14),((5,7),12)),((3,9),(6,11,13))),(8,10)),(15,16)));
tree PAUP_20 = [&U] (1,(((((2,4),(8,10),14),(3,9),((5,7),12)),((6,13),11)),(15,16)));
tree PAUP_21 = [&U] (1,((((2,4),(8,10),14),((3,9),((6,13),11)),((5,7),12)),(15,16)));
tree PAUP_22 = [&U] (1,((((2,4),(((3,9),((6,13),11)),((5,7),12)),14),(8,10)),(15,16)));
tree PAUP_23 = [&U] (1,((((2,4),(8,10),14),(3,9),((5,7),12),((6,13),11)),(15,16)));
tree PAUP_24 = [&U] (1,((((2,4),(8,10),14),(3,9),(((5,7),12),((6,13),11))),(15,16)));
tree PAUP_25 = [&U] (1,(((((2,4),14),(8,10)),((3,9),(((5,7),12),((6,13),11)))),(15,16)));
tree PAUP_26 = [&U] (1,(((((2,4),(8,10),14),(5,7),(((6,13),11),12)),(3,9)),(15,16)));
tree PAUP_27 = [&U] (1,(((((((2,4),14),((5,7),12)),((6,13),11)),(3,9)),(8,10)),(15,16)));
tree PAUP_28 = [&U] (1,((((2,4),(((3,9),((6,13),11)),((5,7),12)),14),8,10),(15,16)));
tree PAUP_29 = [&U] (1,(((((2,4),14),(8,10)),(((3,9),((6,13),11)),((5,7),12))),(15,16)));
tree PAUP_30 = [&U] (1,(((((2,4),14),(((3,9),((6,13),11)),((5,7),12))),(8,10)),(15,16)));
tree PAUP_31 = [&U] (1,(((((2,4),14),(8,10)),((3,9),((5,7),12),((6,13),11))),(15,16)));
tree PAUP_32 = [&U] (1,((((2,4),(8,10),14),(3,9),(5,7),(((6,13),11),12)),(15,16)));
tree PAUP_33 = [&U] (1,(((((((2,4),14),((5,7),12)),(3,9)),((6,13),11)),(8,10)),(15,16)));
tree PAUP_34 = [&U] (1,(((((2,4),14),(8,10)),((3,9),((5,7),(((6,13),11),12)))),(15,16)));
tree PAUP_35 = [&U] (1,((((2,4),(8,10),14),(3,9),((5,7),(((6,13),11),12))),(15,16)));
tree PAUP_36 = [&U] (1,(((((2,4),(8,10),14),(3,9),(((6,13),11),12)),(5,7)),(15,16)));
tree PAUP_37 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),(6,13)),11),((5,7),12))),(15,16)));
tree PAUP_38 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),6,13),11),((5,7),12))),(15,16)));
tree PAUP_39 = [&U] (1,(((((2,4),14),((3,9),(((5,7),12),((6,13),11)))),(8,10)),(15,16)));
tree PAUP_40 = [&U] (1,((((2,4),((3,9),(((5,7),12),((6,13),11))),14),8,10),(15,16)));
tree PAUP_41 = [&U] (1,((((((2,4),14),(((5,7),12),((6,13),11))),(3,9)),(8,10)),(15,16)));
tree PAUP_42 = [&U] (1,((((((2,4),14),((5,7),12),((6,13),11)),(3,9)),(8,10)),(15,16)));
tree PAUP_43 = [&U] (1,((((2,4),(8,10),14),(((3,9),(6,13)),11),((5,7),12)),(15,16)));
tree PAUP_44 = [&U] (1,(((((2,4),14),((3,9),((5,7),12),((6,13),11))),(8,10)),(15,16)));
tree PAUP_45 = [&U] (1,((((2,4),((3,9),((5,7),12),((6,13),11)),14),8,10),(15,16)));
tree PAUP_46 = [&U] (1,((((2,4),((3,9),((5,7),(((6,13),11),12))),14),(8,10)),(15,16)));
tree PAUP_47 = [&U] (1,((((2,4),((3,9),((5,7),(((6,13),11),12))),14),8,10),(15,16)));
tree PAUP_48 = [&U] (1,((((((2,4),14),((5,7),(((6,13),11),12))),(3,9)),(8,10)),(15,16)));
tree PAUP_49 = [&U] (1,((((2,4),((((3,9),(6,13)),11),((5,7),12)),14),(8,10)),(15,16)));
tree PAUP_50 = [&U] (1,((((2,4),((((3,9),(6,13)),11),((5,7),12)),14),8,10),(15,16)));
tree PAUP_51 = [&U] (1,((((2,4),(8,10),14),((((3,9),(6,13)),11),((5,7),12))),(15,16)));
tree PAUP_52 = [&U] (1,((((2,4),(8,10),14),((((3,9),6,13),11),12),(5,7)),(15,16)));
tree PAUP_53 = [&U] (1,((((((2,4),14),((5,7),12)),(((3,9),(6,13)),11)),(8,10)),(15,16)));
tree PAUP_54 = [&U] (1,((((2,4),((((3,9),6,13),11),((5,7),12)),14),(8,10)),(15,16)));
tree PAUP_55 = [&U] (1,(((((2,4),14),(((((3,9),6,13),11),12),(5,7))),(8,10)),(15,16)));
tree PAUP_56 = [&U] (1,(((((2,4),14),(8,10)),(((((3,9),6,13),11),12),5,7)),(15,16)));
tree PAUP_57 = [&U] (1,((((2,4),(((((3,9),6,13),11),12),(5,7)),14),(8,10)),(15,16)));
tree PAUP_58 = [&U] (1,((((2,4),((((3,9),6,13),11),((5,7),12)),14),8,10),(15,16)));
tree PAUP_59 = [&U] (1,(((((2,4),14),(8,10)),(((((3,9),6,13),11),12),(5,7))),(15,16)));
tree PAUP_60 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),6,13),11),12),(5,7)),(15,16)));
tree PAUP_61 = [&U] (1,((((((2,4),14),(8,10)),((((3,9),6,13),11),12)),(5,7)),(15,16)));
tree PAUP_62 = [&U] (1,(((((2,4),14),((((3,9),6,13),11),((5,7),12))),(8,10)),(15,16)));
tree PAUP_63 = [&U] (1,((((((2,4),14),((5,7),12)),(((3,9),6,13),11)),(8,10)),(15,16)));
tree PAUP_64 = [&U] (1,(((((2,4),14),(((3,9),6,13),11),((5,7),12)),(8,10)),(15,16)));
tree PAUP_65 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),6,13),11),(5,7,12))),(15,16)));
tree PAUP_66 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),6,13),11),((5,12),7))),(15,16)));
tree PAUP_67 = [&U] (1,(((((2,4),(8,10),14),((((3,9),6,13),11),12)),(5,7)),(15,16)));
tree PAUP_68 = [&U] (1,((((2,4),(((((3,9),6,13),11),12),(5,7)),14),8,10),(15,16)));
tree PAUP_69 = [&U] (1,(((((2,4),14),((3,9),((6,13),11)),((5,7),12)),(8,10)),(15,16)));
tree PAUP_70 = [&U] (1,((((((2,4),14),((5,7),12)),((3,9),((6,13),11))),(8,10)),(15,16)));
tree PAUP_71 = [&U] (1,((((2,4),((3,9),((5,7),12),((6,13),11)),14),(8,10)),(15,16)));
tree PAUP_72 = [&U] (1,((((2,4),((3,9),(((5,7),12),((6,13),11))),14),(8,10)),(15,16)));
tree PAUP_73 = [&U] (1,((((2,4),((3,9),(5,7),(((6,13),11),12)),14),(8,10)),(15,16)));
tree PAUP_74 = [&U] (1,(((((2,4),14),((3,9),(6,11,13)),((5,7),12)),(8,10)),(15,16)));
tree PAUP_75 = [&U] (1,(((((2,4),14),(((3,9),(6,11,13)),((5,7),12))),(8,10)),(15,16)));
tree PAUP_76 = [&U] (1,(((((2,4),14),(3,9),((5,7),12),((6,13),11)),(8,10)),(15,16)));
tree PAUP_77 = [&U] (1,(((((2,4),14),(8,10)),(((3,9),(((6,13),11),12)),(5,7))),(15,16)));
tree PAUP_78 = [&U] (1,((((((2,4),14),(3,9),((5,7),12)),((6,13),11)),(8,10)),(15,16)));
tree PAUP_79 = [&U] (1,(((((2,4),14),(3,9),(((5,7),12),((6,13),11))),(8,10)),(15,16)));
tree PAUP_80 = [&U] (1,(((((2,4),14),(8,10)),((3,9),(5,7),(((6,13),11),12))),(15,16)));
tree PAUP_81 = [&U] (1,(((((2,4),14),(8,10)),((3,9),(((6,13),11),12)),(5,7)),(15,16)));
tree PAUP_82 = [&U] (1,((((((2,4),14),(8,10)),((3,9),(((6,13),11),12))),(5,7)),(15,16)));
tree PAUP_83 = [&U] (1,((((((2,4),14),(5,7),(((6,13),11),12)),(3,9)),(8,10)),(15,16)));
tree PAUP_84 = [&U] (1,((((2,4),((3,9),(5,7),(((6,13),11),12)),14),8,10),(15,16)));
tree PAUP_85 = [&U] (1,(((((2,4),14),(((3,9),(6,13)),11),((5,7),12)),(8,10)),(15,16)));
tree PAUP_86 = [&U] (1,(((((2,4),14),((3,9),(5,7),(((6,13),11),12))),(8,10)),(15,16)));
tree PAUP_87 = [&U] (1,(((((2,4),14),((3,9),((5,7),(((6,13),11),12)))),(8,10)),(15,16)));
tree PAUP_88 = [&U] (1,(((((2,4),14),((((3,9),(6,13)),11),((5,7),12))),(8,10)),(15,16)));
tree PAUP_89 = [&U] (1,(((((2,4),14),(3,9),(5,7),(((6,13),11),12)),(8,10)),(15,16)));
tree PAUP_90 = [&U] (1,(((((2,4),14),(3,9),((5,7),(((6,13),11),12))),(8,10)),(15,16)));
tree PAUP_91 = [&U] (1,(((((2,4),((3,9),(((6,13),11),12)),14),(8,10)),(5,7)),(15,16)));
tree PAUP_92 = [&U] (1,(((((2,4),14),(3,9),(((6,13),11),12)),(5,7),(8,10)),(15,16)));
tree PAUP_93 = [&U] (1,((((((2,4),14),(3,9),(((6,13),11),12)),(5,7)),(8,10)),(15,16)));
tree PAUP_94 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),(6,13)),11),(5,7,12))),(15,16)));
tree PAUP_95 = [&U] (1,(((((2,4),14),(8,10)),((((3,9),(6,13)),11),((5,12),7))),(15,16)));
tree PAUP_96 = [&U] (1,((((((2,4),14),((3,9),(((6,13),11),12))),(8,10)),(5,7)),(15,16)));
tree PAUP_97 = [&U] (1,(((((2,4),((((3,9),6,13),11),12),14),(8,10)),(5,7)),(15,16)));
tree PAUP_98 = [&U] (1,(((((2,4),14),((((3,9),6,13),11),12),(5,7)),(8,10)),(15,16)));
tree PAUP_99 = [&U] (1,(((((2,4),14),((((3,9),6,13),11),12)),(5,7),(8,10)),(15,16)));
tree PAUP_100 = [&U] (1,((((((2,4),14),((((3,9),6,13),11),12)),(8,10)),(5,7)),(15,16)));
End;
